// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SearchBar /> can render SearchBar 1`] = `
<SearchBarRender
  SearchBar={
    <ForwardRef(AutoComplete)
      allowClear={true}
      autoFocus={true}
      className="searchBar"
      defaultValue=""
      onSearch={[Function]}
      onSelect={[Function]}
    >
      <Input
        placeholder="search"
        prefix={<ForwardRef(SearchOutlined) />}
        size="large"
        type="text"
      />
    </ForwardRef(AutoComplete)>
  }
  text=""
/>
`;

exports[`<SearchBarError /> should be able to render 1`] = `
<Fragment>
  <DumbSearchBar />
  mock error
</Fragment>
`;

exports[`<SearchBarLoading /> should be able to render 1`] = `
<DumbSearchBar
  disabled={true}
  loading={true}
/>
`;

exports[`<SearchBarRender /> can render Fetch while has text 1`] = `
<WithFetch
  Component={
    <SearchDataResult
      SearchBar={
        <div>
          Dumb
        </div>
      }
    />
  }
  ErrorComponent={
    <SearchBarError
      SearchBar={
        <div>
          Dumb
        </div>
      }
    />
  }
  LoadingComponent={
    <SearchBarLoading
      SearchBar={
        <div>
          Dumb
        </div>
      }
    />
  }
  url="/api/location/search?query=london_id"
/>
`;

exports[`<SearchBarRender /> can render while no text 1`] = `
<div>
  Dumb
</div>
`;

exports[`<SearchDataResult /> should be able to render when has data 1`] = `
<DumbSearchBar
  open={true}
  options={
    Array [
      Object {
        "label": "option 1",
        "value": "101",
      },
      Object {
        "label": "option 2",
        "value": "102",
      },
    ]
  }
/>
`;

exports[`<SearchDataResult /> should be able to render when no data 1`] = `
<DumbSearchBar
  open={true}
  options={
    Array [
      Object {
        "disabled": true,
        "label": "Not found",
        "value": null,
      },
    ]
  }
/>
`;
